#===============================================================================#
#            Command line tools for administering an i2b2 project               #
#===============================================================================#

PREREQUISITES.
==============
If you have i2b2 installed, then most prerequisites are present.
Other run-time dependencies are held within the lib directory.

However, some database artifacts also require to be set up beforehand.
See below.

QUICK START.
============
1. Unzip this package into a convenient place on a server hosting an i2b2 domain.

2. Set the I2B2_ADMIN_PROCS_HOME environment variable and export it.
   This should be accomplished by editing the set.sh file within the i2b2 install directory;
   issue the following command at the command prompt:
   . ./set.sh
   There is no need to do this as root or sudo. However, if you subsequently execute
   a script as sudo, remember to inherit the environment settings:
   sudo -E ./somescript.sh  
   
3. Review configuration settings within the config directory.
   Basically three files:
   config.properties
   defaults.sh
   log4j.properties 
   
NOTES.
=======
The remote-holding-area is used in calls within remote VM's,
viz: caTissue and Onyx (maybe more in the future?).
However, the fixed caTissue ontology (caTissue-Refined-Metadata8.xml) is also held 
here for convenience. Be sure you don't accidentally delete it!!!

DATABASE ARTIFACTS.
====================
Read this in conjunction with the config.properties file.
Some artifacts will already have been set up by the install procedures.

For Postgresql:
---------------
The overall database should already be present (eg: 'i2b2'),
together with relevant schemas for the hive and pm data.

What is now required FOR EACH PROJECT is an individual/unique schema within 
this database for metadata, crc data, work data and identity management data 
(ie: 4 new schemas).

Each of these new schemas should also have a separate user with a username/password combination
For simplicity, the suggestion is the username and the schemaname be identical in each case.
For example,
project crc schema might be 'brisskit1data' and its user 'brisskit1data'
project metadata schema might be 'brisskit1metadata' and its user 'brisskit1metadata'
...and so on.



